import asyncio

from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup, ReplyKeyboardMarkup, KeyboardButton, WebAppInfo

from bot import bot

from models.dbs.orm import Orm
from models.dbs.models import *

from .callbacks import *


waiting_text = "–í–∞—à –∑–∞–ø—Ä–æ—Å –ø—Ä–∏–Ω—è—Ç, –æ–∂–∏–¥–∞–π—Ç–µ –æ—Ç–≤–µ—Ç–∞..."


message_prompt_taken_message_text = "‚úÖ –ó–∞–ø—Ä–æ—Å –ø—Ä–∏–Ω—è—Ç. –ì–µ–Ω–µ—Ä–∏—Ä—É—é –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ, —ç—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å 1-2 –º–∏–Ω—É—Ç—ã..."


async def generate_profile_text(user: User):
    return f"""–≠—Ç–æ –≤–∞—à –ø—Ä–æ—Ñ–∏–ª—å
ID: {user.telegram_id}"""


async def generate_payment_keyboard(payment_link: str, payment_id: str, type_='rate'):
    return InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(
                    text="–û–ø–ª–∞—Ç–∏—Ç—å",
                    url=payment_link,
                ),
                InlineKeyboardButton(
                    text="–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ–ø–ª–∞—Ç—É",
                    callback_data=f"check_payment:{type_}:{payment_id}"
                )
            ]
        ]
    )


async def get_count_of_requests(model: str, user: User):
    count_of_requests = await Orm.get_count_of_requests(model, telegram_id=user.telegram_id)
    return count_of_requests


async def generate_current_models_text(user: User):
    return f"""
ChatGPT-4o:

üåü –ü–æ–ª–Ω–æ—Ü–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è GPT-4, –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—é—â–∞—è –≤—ã—Å–æ–∫—É—é —Ç–æ—á–Ω–æ—Å—Ç—å –≤ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç–≤–µ—Ç–æ–≤
üß† –ò–¥–µ–∞–ª—å–Ω–∞ –¥–ª—è —Å–ª–æ–∂–Ω—ã—Ö —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö –∑–∞–¥–∞—á

ChatGPT-4o mini:

üéØ –ü–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –ø—Ä–æ—Å—Ç—ã—Ö –∑–∞–¥–∞—á, –≥–¥–µ –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è –≤—ã—Å–æ–∫–∞—è –≤—ã—á–∏—Å–ª–∏—Ç–µ–ª—å–Ω–∞—è –º–æ—â–Ω–æ—Å—Ç—å –∏–ª–∏ —Å–ª–æ–∂–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞
    """


async def generate_statistic_text():
    yesterday, today, all_users_count, online_count = await asyncio.gather(
        Orm.get_yesterday_count(),
        Orm.get_today_count(),
        Orm.get_all_users_count(),
        Orm.get_online_count(),
    )

    try:
        diff = int((today / yesterday - 1) * 100)
    except ZeroDivisionError:
        diff = 0

    arrow_text = f"‚Üë{diff}%" if diff >= 0 else f"‚Üì{diff}%"
    return f"""üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞

‚úÖ –°–µ–≥–æ–¥–Ω—è –≤ –±–æ—Ç–∞ –ø—Ä–∏—à–ª–æ {today} —á–µ–ª. ({arrow_text})
‚úÖ –í—á–µ—Ä–∞ –≤ –±–æ—Ç–∞ –ø—Ä–∏—à–ª–æ {yesterday} —á–µ–ª.

üî• –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {all_users_count}

üëâ –æ–Ω–ª–∞–π–Ω {online_count}
"""


async def generate_start_text(message):
    return f"""–†–∞–¥ —Ç–µ–±—è –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å, {message.from_user.full_name}! –Ø Telegram –±–æ—Ç ChatGPT + Dall-E

–ú–æ–∂–µ—à—å –∑–∞–¥–∞–≤–∞—Ç—å –º–Ω–µ –ª—é–±—ã–µ –≤–æ–ø—Ä–æ—Å—ã, –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏ üòâ

–£–∑–Ω–∞—Ç—å –≤—Å–µ –∫–æ–º–∞–Ω–¥—ã /help"""

help_text = """
–≠—Ç–æ—Ç –±–æ—Ç –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç –≤–∞–º –¥–æ—Å—Ç—É–ø –∫ –ø—Ä–æ–¥—É–∫—Ç–∞–º OpenAI –∏ –¥—Ä—É–≥–∏–º –Ω–µ–π—Ä–æ—Å–µ—Ç—è–º, —Ç–∞–∫–∏–º –∫–∞–∫ ChatGPT, Midjourney –∏ Dall-E 3, –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–µ–∫—Å—Ç–∞ –∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π.

–ß–∞—Ç–±–æ—Ç —É–º–µ–µ—Ç:
1. –ü–∏—Å–∞—Ç—å –∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Ç–µ–∫—Å—Ç—ã
2. –ü–µ—Ä–µ–≤–æ–¥–∏—Ç—å —Å –ª—é–±–æ–≥–æ —è–∑—ã–∫–∞ –Ω–∞ –ª—é–±–æ–π
3. –ü–∏—Å–∞—Ç—å –∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–æ–¥
4. –û—Ç–≤–µ—á–∞—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã

ü§ñ –ë–æ—Ç –∏—Å–ø–æ–ª—å–∑—É–µ—Ç —Ç—É –∂–µ –º–æ–¥–µ–ª—å, —á—Ç–æ –∏ —Å–∞–π—Ç ChatGPT

‚úçÔ∏è –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ –æ—Ç–≤–µ—Ç–∞ –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ –í–∞—à –≤–æ–ø—Ä–æ—Å –≤ —á–∞—Ç

üåÖ –î–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è Midjorney –Ω–∞—á–Ω–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å /mj –∏ –¥–æ–±–∞–≤—å—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ

–î–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è DALL-E 3 –Ω–∞—á–Ω–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å /dalle

üîÑ –ß—Ç–æ–±—ã –æ—á–∏—Å—Ç–∏—Ç—å –∫–æ–Ω—Ç–µ–∫—Å—Ç –¥–∏–∞–ª–æ–≥–∞, –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–æ–º–∞–Ω–¥–æ–π /reset

–ö–æ–º–∞–Ω–¥—ã
/start - –ß—Ç–æ —É–º–µ–µ—Ç —á–∞—Ç-–±–æ—Ç
/profile - –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
/premium- –ø–æ–ª—É—á–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É
/reset - —Å–±—Ä–æ—Å –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
/model - –≤—ã–±—Ä–∞—Ç—å –Ω–µ–π—Ä–æ—Å–µ—Ç—å
/mj - –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ Midjorney
/dalle - –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ Dall-e
/help - –ø–æ–º–æ—â—å
"""

close_markup = InlineKeyboardMarkup(
    inline_keyboard=[
        [
            InlineKeyboardButton(text="–ó–∞–∫—Ä—ã—Ç—å", callback_data="close")
        ]
    ]
)

buy_premium_text = "–ß—Ç–æ–±—ã –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –∑–∞–ø—Ä–æ—Å—ã –∫ ChatGPT-4o –Ω—É–∂–Ω–æ –æ—Ñ–æ—Ä–º–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É Plus –∏–ª–∏ PRO –ø–æ –∫–æ–º–∞–Ω–¥–µ /premium"


async def generate_model_markup(user: User):
    return InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(
                    text="‚úÖ" + e.value if user.chat_model.value == e.value else "" + e.value,
                    callback_data=f"change_to:{e.name}"
                )
            ] for e in ChatModelEnum
        ]
    )
